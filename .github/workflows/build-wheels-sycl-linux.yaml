name: Build Wheels (SYCL) (Linux)
on:
  workflow_dispatch:
  push:

permissions:
  contents: write
 
jobs:
  define_matrix:
    name: Define Build Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Define Job Output
        id: set-matrix
        # 'pyver' = @("3.8", "3.9", "3.10", "3.11", "3.12")
        run: |
          $matrix = @{
              'os' = @('ubuntu-20.04')
              'pyver' = @("3.10")
              'releasetag' = @("basic")
          }
          $matrixOut = ConvertTo-Json $matrix -Compress
          Write-Output ('matrix=' + $matrixOut) >> $env:GITHUB_OUTPUT

  build_wheels:
    name: Build Wheel ${{ matrix.os }} Python ${{ matrix.pyver }}
    needs: define_matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{ fromJSON(needs.define_matrix.outputs.matrix) }}
    defaults:
      run:
        shell: pwsh
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: add oneAPI to apt
        shell: bash
        run: |
          cd /tmp
          wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"

      - name: install oneAPI dpcpp compiler
        shell: bash
        run: |
          sudo apt update
          sudo apt install intel-oneapi-compiler-dpcpp-cpp

      - name: install oneAPI MKL library
        shell: bash
        run: |
          sudo apt install intel-oneapi-mkl-devel

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.pyver }}
          architecture: 'x64'
          cache: "pip"

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build wheel setuptools cmake
          python -m pip install scikit-build

      - name: Build Wheel
        run: |
          ./scripts/workflow-linux-build-sycl.sh

      - name: Upload Wheel Artifact
        uses: actions/upload-artifact@v4
        with:
          path: dist/*.whl
          name: llama-sycl-wheel-python${{ matrix.pyver }}.whl

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          tag_name: ${{ github.ref_name }}-sycl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
